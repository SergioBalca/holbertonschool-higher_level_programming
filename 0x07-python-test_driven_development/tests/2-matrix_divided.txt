The ``2-matrix_divided`` module
==============================

Using ``matrix_divided``
-----------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Now use it:
	
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix = [[1, 2, 3], {1:2, 3:4}]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix = {1:2, 3:4, 5:6, 7:8}
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2, 3], ['H', 'I', '!'], [4, 5, 6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2], [3, 4, 5], [6]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "str")
	Traceback (most recent call last):
        ...
        TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
        ...
        TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 1e1000000)
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 1e-100000)
	Traceback (most recent call last):
        ...
        ZeroDivisionError: division by zero
	


